source("http://bioconductor.org/biocLite.R")
biocLite("mgsa")
library(mgsa)
data("example")
example_go
example_o
fit=mgsa(example_o, example_go)
example_o
example_go
fit
res=setsResults(fit)
subset(res,estimate>0.5)
a<-list(set1=LETTERS[1:3], set2=LETTERS[2:5])
a
help c
c("A","B")
help c()
c ?
c() ?
list
list?
help list
readGAF(
+ + + +) +)
readGAF(system.file("/mnt/ws/sysbio/roygroup/home/sroy/old-local-home/programs/yeast_goassoc/inputdata/gene_association.sgd",package="mgsa"))
readGAF(system.file("/mnt/ws/sysbio/roygroup/home/sroy/old-local-home/programs/yeast_goassoc/inputdata/gene_association.sgd",package="mgsa"
)
)
biocLite("GO.db")
readGAF(system.file("/mnt/ws/sysbio/roygroup/home/sroy/old-local-home/programs/yeast_goassoc/inputdata/gene_association.sgd",package="mgsa"))
pwd()
gwd()
wd()
ls
ls()
getwd()
obs<-read.table("examplegeneset/set1.txt")
obs
obs(1)
obs[1]
obs[2]
obs[1][2]
obs[1,1]
inp<-scan("examplegeneset/set1.txt",list(""));
inp
inp[1]

example_o

inp
inp[[1]]

inp$genes
inp$genes[1]
inp$genes[2]
inp$genes[3]
inp
inp$genes
inp$genes[1]
sets<-read.table("examplegeneset/goset.txt");
sets<-readLines("examplegeneset/goset.txt");
sets
sets[1]
sets[2]
read.csv ?
help read.csv 
 read.csv() 
? read.csv() 
sets<-read.delim("examplegeneset/goset.txt");
sets<-read.csv("examplegeneset/goset.txt");
sets
first<-strsplit(sets[1],split="\t");
first<-strsplit(sets,split="\t");
first<-strsplit(sets,split = "\t");
? strsplit
first<-strsplit(sets,split = '\t');
first<-strsplit(sets,split = '\t');
ss
first<-strsplit(sets,split = "\t");
sets<-read.csv("examplegeneset/goset.txt");
sets<-read.csv("examplegeneset/goset.txt");
sets<-read.csv("examplegeneset/goset.txt");
sets<-readLines("examplegeneset/goset.txt");
sets[1]
sets
sets[1]
mysets<-list(set1=sets[1],set2=sets[2])
mysets
 n.values <- sum(sapply(rows, length))
 n.values <- sum(sapply(sets, length))
n.values
 f <- file(path, 'rt')
 f <- file("examplegeneset/goset_tab.txt", 'rt')
rows <- list()
    while (length(line <- readLines(f, n=1)) > 0) {
        rows[[length(rows) + 1]] <- scan(text=line, what=what, sep=sep, ...)
    }
rows <- list()
    while (length(line <- readLines(f, n=1)) > 0) {
f<
}
? scan
rows <- list()
    while (length(line <- readLines(f, n=1)) > 0) {
        rows[[length(rows) + 1]] <- scan(text=line, what="character", sep="\t")
}
rows
close(f)
 f <- file(path, 'rt')
 f <- file("examplegeneset/goset_tab.txt", 'rt')
rows<-list()
? scan
? scan
    while (length(line <- readLines(f, n=1)) > 0) {
        rows[[length(rows) + 1]] <- scan(text=line, what="list", sep="\t")
}
close(f)
rows
rows[1]
rows[2]
rows[1]
ls
ls()
mysets
ls()
sets
ls()
inp
inp$genes
results<-mgsa(inp$genes,rows)
results
close(f)
 f <- file("examplegeneset/goset_tab.txt", 'rt')
row<-list()
    while (length(line <- readLines(f, n=1)) > 0) {
        rows[[length(rows) + 1]] <- scan(text=line, what="list", sep="\t")
}
inp
rows[1]
rows[2]
rownames
rows[,1]
rownames(rows)<-rows[,1]
rownames(rows)<-rows[1]

rows[1]
rows[[1]]
rows$
rows[,1]->rownames(row)
close(f)
 f <- file("examplegeneset/goset_tab.txt", 'rt')
rows<-list()
    while (length(line <- readLines(f, n=1)) > 0) {
        rows[[length(rows) + 1]] <- scan(text=line, what="list", sep="\t")
}
close(f)
rows
rows[1]
rows[2]
rownames(row)
row[1]
rows[1]
rows[2]
rows[1]
rows[[1]]
newrows[1]<-rows[[1]]
rows[[2]]
length(rows)
newrows[[1]]<-rows[[1]]
newrows<-rows[[1]]
newrows
newrows[,1]
newrows[1]
length(rows)
newrows<-list()
newrows[1]<-rows[[1]]
newrows[[1]]<-rows[[1]]
newrows
rows[[1]]
rows[[1]][1]
rows[[:]][1]
rows[[1:2]][1]
rows[:][1]
rows[[1]]
rows[[1]][1]

rows
rows[1]
mynames<-list(rows[[1]][1],rows[[2]],[1])
mynames<-list(rows[[1]][1],rows[[2]][1])
mynames
mynames<c(rows[[1]][1],rows[[2]][1])
mynames<-c(rows[[1]][1],rows[[2]][1])
mynames
names(rows) <- rows[[1]]
names(rows)<-mynames
rows
results
re
ls()
inp
inp$genes
results<-mgsa(inp$genes,rows)
results
genes <-scan("examplegeneset/terms.txt","c");
genes <-scan("examplegeneset/set1.txt","c");
genes
results
ble(results,"examplegeneset/results.txt");

writeChar(results)
writeChar(results,"examplegeneset/results.txt")
write.table(results,"examplegeneset/results.txt")
results.setsResult
results.setsResults
results<-mgsa(inp$genes,rows)
type(results)
results
results$setsResults
results[setsResults]
results=mgsa(inp$genes,rows)
result
results
results$
setsResults(results)
a<-setsResults(results)
write.table(a,"examplegeneset/results.txt");
q()
